# Generated by Django 4.2.3 on 2024-05-27 16:47

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_countries.fields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_partner', models.BooleanField(default=False)),
                ('is_client', models.BooleanField(default=False)),
                ('is_team', models.BooleanField(default=False)),
                ('is_enduser', models.BooleanField(default=False)),
                ('is_event', models.BooleanField(default=False)),
                ('is_admin', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('description', models.TextField()),
            ],
            options={
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(max_length=255)),
                ('first_name', models.CharField(max_length=255)),
                ('second_name', models.CharField(max_length=255)),
                ('address', models.CharField(max_length=255)),
                ('telephone_number', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254)),
                ('company_description', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='EndUserDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=255)),
                ('second_name', models.CharField(max_length=255)),
                ('address', models.CharField(max_length=255)),
                ('telephone_number', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_code', models.CharField(max_length=255, null=True, unique=True)),
                ('partner_name', models.CharField(default='', max_length=30)),
                ('partner_email', models.EmailField(default='', max_length=254)),
                ('partner_phonenumber', models.CharField(default='', max_length=30)),
                ('client_email', models.EmailField(default='', max_length=254)),
                ('client_phonenumber', models.CharField(default='', max_length=30)),
                ('event_type', models.CharField(choices=[('with_resources', 'With Resources'), ('without_resources', 'Without Resources')], default='', max_length=255)),
                ('event_name', models.CharField(max_length=255)),
                ('event_country', django_countries.fields.CountryField(default='Senegal', max_length=255)),
                ('event_place', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('type_of_event', models.CharField(max_length=255)),
                ('begindatetime', models.DateTimeField()),
                ('enddatetime', models.DateField()),
                ('event_image_1', models.FileField(blank=True, null=True, upload_to='event/images')),
                ('event_image_2', models.FileField(blank=True, null=True, upload_to='event/images')),
                ('event_image_3', models.FileField(blank=True, null=True, upload_to='event/images')),
                ('is_resourses_added', models.BooleanField(default=False)),
                ('is_payment_done', models.BooleanField(default=False)),
                ('is_activated', models.BooleanField(default=False)),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='home.category')),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='client_event', to='home.client')),
            ],
        ),
        migrations.CreateModel(
            name='NFCData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nfc_id', models.CharField(max_length=500)),
                ('wallet', models.BigIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='PassCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('description', models.TextField()),
            ],
            options={
                'verbose_name': 'pass_category',
            },
        ),
        migrations.CreateModel(
            name='WorkshopPoint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('workshop_point_quantity', models.IntegerField(default=0)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='workshop_points', to='home.event')),
            ],
        ),
        migrations.CreateModel(
            name='ServicePrice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_type', models.CharField(choices=[('Check in', 'Check in'), ('Guichet', 'Guichet'), ('Drinks', 'Drinks'), ('Food Court', 'Food Court'), ('Activity', 'Activity')], max_length=50)),
                ('service_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('event', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='event_service_price', to='home.event')),
            ],
        ),
        migrations.CreateModel(
            name='SentGift',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reciever_name', models.CharField(max_length=255)),
                ('reciever_email', models.EmailField(max_length=254)),
                ('ticket_id', models.IntegerField()),
                ('gifter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='gifter', to='home.enduserdetail')),
            ],
        ),
        migrations.CreateModel(
            name='PassPurchase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pass_type', models.CharField(choices=[('Simple', 'Simple'), ('Gold', 'Gold'), ('Vip', 'Vip'), ('Prestige', 'Prestige')], max_length=50)),
                ('quantity', models.PositiveIntegerField(default=0)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('purchase_date', models.DateTimeField(auto_now_add=True)),
                ('is_payment_done', models.BooleanField(default=False)),
                ('nfc_id', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('is_used', models.BooleanField(default=False)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pass_purchases', to='home.event')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PassPrice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pass_type', models.CharField(choices=[('Simple', 'Simple'), ('Gold', 'Gold'), ('Vip', 'Vip'), ('Prestige', 'Prestige')], max_length=50)),
                ('price_with_qr', models.DecimalField(decimal_places=2, max_digits=10)),
                ('price_with_nfc', models.DecimalField(decimal_places=2, max_digits=10)),
                ('event', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='event_pass_price', to='home.event')),
            ],
        ),
        migrations.CreateModel(
            name='Partner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(max_length=255)),
                ('first_name', models.CharField(max_length=255)),
                ('second_name', models.CharField(max_length=255)),
                ('address', models.CharField(max_length=255)),
                ('telephone_number', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254)),
                ('partner_type', models.CharField(choices=[('patner_1', 'Partner 1'), ('patner_2', 'Partner 2'), ('patner_3', 'Partner 3')], max_length=255)),
                ('company_description', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='OTP',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('otp', models.CharField(max_length=4)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='MyCart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pass_type', models.CharField(choices=[('Simple', 'Simple'), ('Gold', 'Gold'), ('Vip', 'Vip'), ('Prestige', 'Prestige')], max_length=50)),
                ('quantity', models.PositiveIntegerField(default=0)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='my_cart', to='home.event')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='GuichetPoint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('guichet_point_quantity', models.IntegerField(default=0)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='guichet_points', to='home.event')),
            ],
        ),
        migrations.CreateModel(
            name='ExhibitionPoint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('exhibition_point_quantity', models.IntegerField(default=0)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exhibition_points', to='home.event')),
            ],
        ),
        migrations.CreateModel(
            name='EventTeam',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('team_type', models.CharField(choices=[('check in', 'Check In'), ('guichet', 'Guichet'), ('drinks', 'Drinks'), ('food court', 'Food Court'), ('activities', 'Activities'), ('other services', 'Other Services')], max_length=255)),
                ('member_type', models.CharField(choices=[('team', 'Team'), ('manager', 'Manager')], max_length=255)),
                ('first_name', models.CharField(max_length=255)),
                ('second_name', models.CharField(max_length=255)),
                ('member_post', models.CharField(max_length=255)),
                ('member_role', models.CharField(default='C-in Point', max_length=255)),
                ('telephone_number', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='event_team', to='home.event')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='EventPassCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price_with_qr', models.DecimalField(decimal_places=2, max_digits=10)),
                ('price_with_nfc', models.DecimalField(decimal_places=2, max_digits=10)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.event')),
                ('pass_category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.passcategory')),
            ],
            options={
                'verbose_name': 'event_pass_category',
            },
        ),
        migrations.CreateModel(
            name='EventPass',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pass_total_quantity', models.PositiveBigIntegerField(default=0)),
                ('simple_pass', models.PositiveIntegerField(default=0)),
                ('vip_pass', models.PositiveIntegerField(default=0)),
                ('gold_pass', models.PositiveIntegerField(default=0)),
                ('prestige_pass', models.PositiveIntegerField(default=0)),
                ('is_nfc', models.BooleanField(default=True)),
                ('event', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='pass_event', to='home.event')),
            ],
        ),
        migrations.CreateModel(
            name='EventBracelet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bracelet_total_quantity', models.PositiveBigIntegerField(default=0)),
                ('blue', models.PositiveIntegerField(default=0)),
                ('yellow', models.PositiveIntegerField(default=0)),
                ('red', models.PositiveIntegerField(default=0)),
                ('purple', models.PositiveIntegerField(default=0)),
                ('is_nfc', models.BooleanField(default=True)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='event_bracelet', to='home.event')),
            ],
        ),
        migrations.CreateModel(
            name='EventBadges',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('simple_paper', models.PositiveIntegerField(default=0)),
                ('personalized_badge', models.PositiveIntegerField(default=0)),
                ('is_nfc', models.BooleanField(default=True)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='event_badges', to='home.event')),
            ],
        ),
        migrations.AddField(
            model_name='event',
            name='partner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='partner_event', to='home.partner'),
        ),
        migrations.AddField(
            model_name='event',
            name='pass_categories',
            field=models.ManyToManyField(through='home.EventPassCategory', to='home.passcategory'),
        ),
        migrations.AddField(
            model_name='event',
            name='user',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='DrinksPoint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('drinks_point_quantity', models.IntegerField(default=0)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='drinks_points', to='home.event')),
            ],
        ),
        migrations.AddField(
            model_name='client',
            name='partner',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='client_partner', to='home.partner'),
        ),
        migrations.AddField(
            model_name='client',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='CheckInPoint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('check_in_point_quantity', models.IntegerField(default=0)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='check_in_points', to='home.event')),
            ],
        ),
        migrations.CreateModel(
            name='BraceletPrice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bracelet_type', models.CharField(choices=[('Blue', 'Blue'), ('Yellow', 'Yellow'), ('Red', 'Red'), ('Purple', 'Purple')], max_length=50)),
                ('price_with_qr', models.DecimalField(decimal_places=2, max_digits=10)),
                ('price_with_nfc', models.DecimalField(decimal_places=2, max_digits=10)),
                ('event', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='event_braclet_price', to='home.event')),
            ],
        ),
        migrations.CreateModel(
            name='Admin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=255)),
                ('second_name', models.CharField(max_length=255)),
                ('address', models.CharField(max_length=255)),
                ('telephone_number', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ActivityPoint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activity_point_quantity', models.IntegerField(default=0)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activity_points', to='home.event')),
            ],
        ),
        migrations.CreateModel(
            name='FavoriteEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('added_on', models.DateTimeField(auto_now_add=True)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.event')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'event')},
            },
        ),
    ]
